{"id": 3, "style": "Line", "contentVariable": "", "contentFunction": "mediump float samplePiecewiseSmooth(in mediump float x, in mediump float res) {\n    mediump float xTimesRes = x * res;\n\n    mediump float x1 = floor(xTimesRes) / res;\n    mediump float y1 = texture2D(iChannel0, vec2(x1, 0)).x;\n\n    mediump float x2 = ceil(xTimesRes) / res;\n    mediump float y2 = texture2D(iChannel0, vec2(x2, 0)).x;\n\n    x2 += 0.001;\n\n    mediump float sine = sin(((x - x1) / (x2 - x1) * 2.0 - 1.0) * 1.5707963267);\n    return y1 + (0.5 + 0.5 * sine) * (y2 - y1);\n}", "contentVisualizer": "uv = gl_FragCoord.xy / iResolution.xy;\n    mediump float curSample = samplePiecewiseSmooth(uv.x, 20.0);\n    mediump float smoothError = smoothstep(0.03, 0.0, abs(uv.y - curSample));\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    if (smoothError > 0.0) {\n        gl_FragColor = vec4(mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), smoothError), 1.0);\n    }\n    gl_FragColor.rgb *= 0.5 + 0.5 * cos(iTime + uv.xyx * vec3(20.0, 1.0, 1.0) + vec3(0.0, 2.0, 4.0));\n    visualizer = gl_FragColor.rgb;"}