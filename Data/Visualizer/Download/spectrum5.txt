{"id": 5,"style": "Spectrum","contentVariable": "#define PI 3.14159\n#define TWO_PI 6.28318\n#define FREQ 512.0","contentFunction": "mediump vec3 rgb2hsv(mediump vec3 c){\n    mediump vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    mediump vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    mediump vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    mediump float d = q.x - min(q.w, q.y);\n    mediump float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nmediump float frequency(mediump float x){\n    return texture2D(iChannel0, vec2(x, 0)).r;\n}\n\nmediump float smoothFrequency(mediump float x, mediump int smoothness){\n    mediump float f = 0.0;\n    mediump int accumulated = 0;\n    for(mediump float i = 0.0; i <= float(smoothness) / FREQ; i += 1.0 / FREQ){\n        f += frequency(x + i);\n        ++accumulated;\n    }\n    return f / float(accumulated);\n}\n\nmediump vec3 hsv2rgb(mediump vec3 c){\n    mediump vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    mediump vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nmediump float luma(mediump vec3 color){\n    return dot(color, vec3(0.299, 0.587, 0.114));\n}","contentVisualizer": "uv = gl_FragCoord.xy/iResolution.xy;\n    mediump vec2 uvn = (uv - 0.5) * 2.0;\n    uvn.x *= iResolution.x / iResolution.y;\n\n    mediump float f = FREQ / max(iResolution.x,iResolution.y);\n\n    mediump float angle = atan(uvn.x, uvn.y);\n    mediump float angleNormalized = angle / TWO_PI;\n    mediump float b = 1.0;\n    mediump vec3 halo = vec3(max(pow(1.0 - abs(length(uvn) - 0.6), 8.0), 0.0)) * b * 2.0;\n    halo = pow(halo, vec3(2.0));\n    mediump vec3 halo2 = halo + vec3(max(pow(abs(length(uvn)), 4.0), 0.0)) * 0.25;\n    mediump float freqColor = smoothFrequency(abs(angleNormalized), 16);\n    visualizer = halo2 * hsv2rgb(vec3(angleNormalized - iTime * 0.2, 1.0, 1.0)) * freqColor;\n\n    visualizer = pow(visualizer, vec3(2));\n    visualizer += max(luma(visualizer * 1.0) - 1.0, 0.0);"}