{"id": 16, "style": "Bar", "contentVariable": "", "contentFunction": "mediump vec3 B2_spline(mediump vec3 x) {\n    mediump vec3 t = 3.0 * x;\n    mediump vec3 b0 = step(0.0, t)     * step(0.0, 1.0-t);\n    mediump vec3 b1 = step(0.0, t-1.0) * step(0.0, 2.0-t);\n    mediump vec3 b2 = step(0.0, t-2.0) * step(0.0, 3.0-t);\n    return 0.5 * (\n    b0 * pow(t, vec3(2.0)) +\n    b1 * (-2.0*pow(t, vec3(2.0)) + 6.0*t - 3.0) +\n    b2 * pow(3.0-t, vec3(2.0)));\n}", "contentVisualizer": "uv = gl_FragCoord.xy / iResolution.xy;\n\n    mediump float fVBars = 100.;\n    mediump float fHSpacing = 1.00;\n\n\n    mediump float x = floor(uv.x * fVBars)/fVBars;\n    mediump float fSample = texture2D(iChannel0, vec2(abs(2.0 * x - 1.0), 0.25)).x;\n\n    mediump float squarewave = sign(mod(uv.x, 1.0/fVBars)-0.004);\n    mediump float fft = squarewave * fSample* 0.5;\n\n    mediump float fHBars = 100.0;\n    mediump float fVSpacing = 0.180;\n    mediump float fVFreq = (uv.y * 3.14);\n    fVFreq = sign(sin(fVFreq * fHBars)+1.0-fVSpacing);\n\n    mediump vec2 centered = vec2(1.0) * uv - vec2(1.0);\n    mediump float t = iTime / 100.0;\n    mediump float polychrome = 1.0;\n    mediump vec3 spline_args = fract(vec3(polychrome*uv.x-t) + vec3(0.0, -1.0/3.0, -2.0/3.0));\n    mediump vec3 spline = B2_spline(spline_args);\n\n    mediump float f = abs(centered.y);\n    mediump vec3 base_color  = vec3(1.0, 1.0, 1.0) - f*spline;\n    mediump vec3 flame_color = pow(base_color, vec3(3.0));\n\n    mediump float tt = 0.3 - uv.y;\n    mediump float df = sign(tt);\n    df = (df + 1.0)/0.5;\n    visualizer = flame_color * vec3(1.0 - step(fft, abs(0.3-uv.y))) * vec3(fVFreq);\n    visualizer -= visualizer * df * 0.180;"}