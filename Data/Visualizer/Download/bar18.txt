{"id": 18, "style": "Bar", "contentVariable": "#define WIDTH 1.0", "contentFunction": "mediump float audio_freq( in sampler2D channel, in mediump float f) {\n    return texture2D( channel, vec2(f, 0.25) ).x;\n}\nmediump float audio_ampl( in sampler2D channel, in mediump float t) {\n    return texture2D( channel, vec2(t, 0.75) ).x;\n}\n\nmediump vec3 B2_spline(mediump vec3 x) { // returns 3 B-spline functions of degree 2\n    mediump vec3 t = 3.0 * x;\n    mediump vec3 b0 = step(0.0, t)     * step(0.0, 1.0-t);\n    mediump vec3 b1 = step(0.0, t-1.0) * step(0.0, 2.0-t);\n    mediump vec3 b2 = step(0.0, t-2.0) * step(0.0, 3.0-t);\n    return 0.5 * (\n    b0 * pow(t, vec3(2.0)) +\n    b1 * (-2.0*pow(t, vec3(2.0)) + 6.0*t - 3.0) +\n    b2 * pow(3.0-t,vec3(2.0))\n    );\n}", "contentVisualizer": "uv = gl_FragCoord.xy / iResolution.xy;\n    mediump vec2 centered = 2.0 * uv - 1.0;\n    centered.x *= iResolution.x / iResolution.y;\n\n    mediump float dist2 = dot(centered, centered);\n    mediump float clamped_dist = smoothstep(0.0, 1.0, dist2);\n    mediump float arclength    = abs(atan(centered.y, centered.x) / radians(360.0))+0.01;\n\n    mediump float t = iTime / 100.0;\n    mediump float polychrome = (1.0 + sin(t*10.0))/2.0; // 0 -> uniform color, 1 -> full spectrum\n    mediump vec3 spline_args = fract(vec3(polychrome*uv.x-t) + vec3(0.0, -1.0/3.0, -2.0/3.0));\n    mediump vec3 spline = B2_spline(spline_args);\n\n    mediump float f = abs(centered.y);\n    mediump vec3 base_color  = vec3(1.0, 1.0, 1.0) - f*spline;\n    mediump vec3 flame_color = pow(base_color, vec3(3.0));\n    mediump vec3 disc_color  = 0.20 * base_color;\n    mediump vec3 wave_color  = 0.10 * base_color;\n    mediump vec3 flash_color = 0.05 * base_color;\n\n    mediump float sample1 = audio_freq(iChannel0, abs((uv.x - .5) / WIDTH) + 0.01);\n    mediump float sample2 = audio_ampl(iChannel0, clamped_dist);\n    mediump float sample3 = audio_ampl(iChannel0, arclength);\n\n    mediump float disp_dist = smoothstep(-0.2, -0.1, sample3-dist2);\n    disp_dist *= (1.0 - disp_dist);\n\n    mediump vec3 color = vec3(0.0);\n\n    mediump float v = abs(uv.y - 0.5);\n    color += flame_color * smoothstep(v, v*8.0, sample1);\n    color += disc_color  * smoothstep(0.5, 1.0, sample2) * (1.0 - clamped_dist);\n    color += flash_color * smoothstep(0.5, 1.0, sample3) * clamped_dist;\n    color += wave_color  * disp_dist;\n    color = pow(color, vec3(0.4545));\n    visualizer = color;"}