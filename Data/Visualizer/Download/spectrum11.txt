{"id": 11, "style": "Spectrum", "contentVariable": "", "contentFunction": "", "contentVisualizer": "mediump float STEPS = 128.;\n    mediump float twoPi = 6.28318512;\n    const mediump float RATIO_9_16 = 0.5625;\n    const mediump float RATIO_16_9 = 1.777778;\n    const mediump float RATIO_3_4 = 0.75;\n    const mediump float RATIO_4_3 = 1.3333333;\n    const mediump float RATIO_1_1 = 1.;\n    mediump float a = (iResolution.x/iResolution.y);\n    uv = (gl_FragCoord.xy/iResolution.xy);\n    uv.x *= a;\n    uv = uv * 4. - 2.;\n    if (a == RATIO_1_1){\n\n    } else if (abs(a - RATIO_9_16) < 0.01){\n        uv.x += 0.85;\n    } else if (abs(a - RATIO_3_4) < 0.01){\n        uv.x += 0.5;\n    } else if (abs(a - RATIO_16_9) < 0.01){\n        uv.x -= a;\n    }else if (abs(a - RATIO_4_3) < 0.01){\n        uv.x -= RATIO_4_3/2.;\n    }\n    mediump vec2 polar = vec2(sqrt(dot(uv, uv)), atan(uv.y, uv.x));\n    mediump float segment = floor((polar.y/twoPi + .5)*STEPS) / STEPS;\n    mediump float audio = texture2D(iChannel0, vec2(segment, 0.)).x;\n    mediump float bass = texture2D(iChannel0, vec2(polar.x*.5, 1.)).x;\n    mediump float warp = polar.x - (2.*audio*audio - .5);\n    mediump float aura = (1.- clamp(polar.x*.15, 0., 1.))-(1.-clamp(warp*.8, 0., 1.));\n    mediump float line = warp > .95 && warp < 1. ? 1. : 0.;\n    mediump float light = warp > .95 ? audio*aura : 0.;\n    visualizer = mix(vec3(light, light*(sin(segment*PI*10.)*.1+.3), 0.), vec3(0., audio*audio+.3, 1.), line);\n    mediump vec3 glow = mix(vec3(.4, 0., .6), vec3(0., .4, 1.), bass * polar.x * polar.x);\n    visualizer = mix(visualizer, glow * polar.x, warp <= .95 ? 1. : 0.);"}