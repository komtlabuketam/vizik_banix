{"id": 4,"style": "Bar","contentVariable": "","contentFunction": "void tRotate(inout mediump vec2 p, mediump float angel) {\n    mediump float s = sin(angel), c = cos(angel);\n    p *= mat2(c, -s, s, c);\n}\n\nmediump float sdCircle(mediump vec2 p, mediump float r) {\n    return length(p) - r;\n}\n\nmediump float opU(mediump float a, mediump float b) {\n    return min(a, b);\n}\n\nmediump float opS(mediump float a, mediump float b) {\n    return max(a, -b);\n}\n\nmediump float sdArk(mediump vec2 p, mediump float ir, mediump float or, mediump float a) {\n    mediump float d = sdCircle(p, or);\n    d = opS(d, sdCircle(p, ir));\n    tRotate(p, -a * 3.14159265359 / 2.);\n    d = opS(d, -p.y);\n    d = opU(d, sdCircle(p - vec2((or + ir) / 2., 0.), (or - ir) / 2.));\n    return d;\n}","contentVisualizer": "#define BARS 24.\n    uv = gl_FragCoord.xy / iResolution.xy * 2. - 1.;\n    if (iResolution.x > iResolution.y) {\n        uv.x *= iResolution.x / iResolution.y;\n    } else {\n        uv.y *= iResolution.y / iResolution.x;\n    }\n    mediump float d = sdCircle(uv, 2.5);\n    d = opS(d, sdCircle(uv, .1));\n    d = opU(d, sdCircle(uv, .1));\n    mediump float barsStart = .17;\n    mediump float barsEnd = .99;\n    mediump float barId = floor((length(uv) -barsStart) / (barsEnd - barsStart) * BARS);\n    if (barId >= 0. && barId < BARS) {\n        mediump float barWidth = (barsEnd - barsStart) / BARS;\n        mediump float barStart = barsStart + barWidth * (barId + .25);\n        mediump float barAngel = texture2D(iChannel0, vec2(1. - barId / BARS, .25)).x * .5;\n        tRotate(uv, -barAngel * .2 * sin(barId + iTime));\n        uv = abs(uv);\n        d = opS(d, sdArk(uv, barStart, barStart + barWidth / 2., barAngel));\n    }\n    mediump float w = min(fwidth(d), .01);\n    visualizer = vec3(smoothstep(-w, w, d));"}