{"id": 6, "style": "Line", "contentVariable": "", "contentFunction": "highp float hash( highp float n ){\n    return fract(sin(n)*43745658.5453123);\n}\n\nhighp float noiseVisual(highp float r){\n    return fract( sin( dot(vec2(r,-r)*0.001 ,vec2(24.12357, 36.789) ) ) * 12345.123);\n}\n\nhighp float wave(highp float amplitude, highp float offset, highp float frequency, highp float phase, highp float t){\n    return offset+amplitude*sin(t*frequency+phase);\n}", "contentVisualizer": "highp float colorSin = 0.0;\n    highp float colorLine = 0.0;\n    const highp int nSini = 25;\n    const highp int nLinei = 30;\n\n    highp float nSin = float(nSini);\n    highp float nLine = float(nLinei);\n\n    highp vec2 mouse = 0. + vec2(0.5* iResolution.x, 0.1 * iResolution.y);\n    mouse = mod(mouse, iResolution.xy);\n    highp float line = 50.0; // mouse.y;\n    // Sin waves\n    highp float beat =  texture2D(iChannel0, vec2(0.25, 0.)).x;\n    if(beat < 0.1){\n        beat = 0.1;\n    }\n    for(highp int ii=0 ; ii<nSini ; ii++)\n    {\n        highp float i = float(ii);\n        highp float amplitude = mouse.x*1.0*noiseVisual(i*0.2454)*sin(iTime+noiseVisual(i)*100.0) * beat*5.;\n        highp float offset = mouse.y;\n        highp float frequency = 0.1*noiseVisual(i*100.2454);\n        highp float phase = 0.02*i*noiseVisual(i*10.2454)*10.0*iTime*mouse.x/iResolution.x;\n        line += i*0.003*wave(amplitude,offset,frequency,phase,gl_FragCoord.x);\n        colorSin += 0.5/abs(line-gl_FragCoord.y);\n    }\n    visualizer = colorSin*vec3(0.2654, 0.4578, 0.654);\n    visualizer += colorLine*vec3(0.254, 0.6578, 0.554);"}