{"id": 7, "style": "Bar", "contentVariable": "mediump float centerx = 0.5;\nmediump float speed = 0.035;\nmediump vec4 dst=vec4(216.0/255.0,78.0/255.0,255.0/255.0,1.0);\nmediump vec4 src=vec4(115.0/255.0,78.0/255.0,255.0/255.0,1.0);", "contentFunction": "mediump vec4 getgradientcolor(mediump vec2 uv){\n    mediump float m=0.0;\n    mediump float c = centerx;\n    if(uv.x>centerx)m=1.0;\n    mediump float d = (uv.x - m*centerx)/centerx;\n    mediump vec4 src1=src;\n    mediump vec4 dst1=dst;\n    if(uv.x>centerx){\n        src1=dst;\n        dst1=src;\n    }\n    mediump float r = d * dst1.r + (1.0-d)*src1.r;\n    mediump float g = d * dst1.g + (1.0-d)*src1.g;\n    mediump float b = d * dst1.b + (1.0-d)*src1.b;\n    mediump vec4 col = vec4(r,g,b,1.0);\n    return col;\n}", "contentVisualizer": "uv = gl_FragCoord.xy / iResolution.xy;\n    const mediump float bands = 20.0;\n    const mediump float segs = 60.0;\n    mediump vec2 p;\n    p.x = floor(uv.x*bands)/bands;\n    p.y = floor(uv.y*segs)/segs;\n    mediump float fft  = texture2D( iChannel0, vec2(p.x,0.0) ).x;\n    fft=(sqrt(fft*fft*fft));\n    mediump vec3 color = getgradientcolor(uv).rgb;\n    mediump float mask = (p.y < fft) ? 1.0 : 0.0;\n    mediump vec2 d = fract((uv - p) *vec2(bands, segs)) - 0.5;\n    mediump float led = smoothstep(0.5, 0.35, abs(d.x)) *\n    smoothstep(0.5, 0.35, abs(d.y));\n    mediump vec3 ledColor = led*color*mask;\n    gl_FragColor = vec4(ledColor, led);\n    visualizer = gl_FragColor.rgb;"}