{"id": 1,"style": "Bar","contentVariable": "","contentFunction": "mediump float h2rgb(mediump float h) {\n    if(h < 0.0) h += 1.0;\n    if(h < 0.166666) return 0.1 + 4.8 * h;\n    if(h < 0.5) return 0.9;\n    if(h < 0.666666) return 0.1 + 4.8 * (0.666666 - h);\n    return 0.1;\n}\n\nmediump vec3 intensityToColour(mediump float i) {\n    mediump float h = 0.666666 - (i * 0.666666);\n    return vec3(h2rgb(h + 0.333333), h2rgb(h), h2rgb(h - 0.333333));\n}","contentVisualizer": "#define bars 32.0\n    #define barSize 1.0 / bars\n    #define barGap 0.1 * barSize\n    #define sampleSize 0.02\n    uv = gl_FragCoord.xy / iResolution.xy;\n    mediump float barStart = floor(uv.x * bars) / bars;\n\n    if(uv.x - barStart < barGap || uv.x > barStart + barSize - barGap) {\n        return visualizer;\n    } else {\n        mediump float intensity = 0.0;\n        for(mediump float s = 0.0; s < barSize; s += barSize * sampleSize) {\n            intensity += texture2D(iChannel0, vec2(barStart + s, 0.0)).r;\n        }\n        intensity *= sampleSize;\n        intensity = clamp(intensity, 0.005, 1.0);\n        mediump float i = float(intensity > uv.y);\n        visualizer = vec3(intensityToColour(intensity) * i);\n    }"}