{"id": 19, "style": "Spectrum", "contentVariable": "", "contentFunction": "", "contentVisualizer": "uv = gl_FragCoord.xy / iResolution.xy - 0.5;\n    uv.y *= iResolution.y/iResolution.x;\n    uv *= 4.;\n    mediump int animation = 0;\n    mediump float fft  = texture2D(iChannel0, vec2(0.0, 0.25)).x;\n    fft = 1.-pow(fft, 4.);\n    if (animation==2 || animation==3) uv *= fft;\n    mediump float shape = 1.-length(uv);\n    mediump float radius = 0.01;\n    if ((animation==0 || animation==3) && uv.y<0.)\n    radius = 0.8-texture2D(iChannel0, vec2((uv.y+0.7)/4., 0.25)).x;\n    shape = 1.-smoothstep(radius+0.02, radius, shape);\n    mediump vec3 color = vec3(0.8, 0.53, 0.3);\n    if (uv.y < 0.){\n        color = mix(vec3(0.6, 0.24, 0.32), color, 1.-length(uv.y));\n        mediump float frequency =  (1.-length(uv.y/2.));\n        if (animation==1) frequency *= fft;\n        mediump float sine = sin(uv.y*mix(10., 100., frequency));\n        shape = sine < 0.8 ? 0. : shape;\n    }\n    visualizer = shape*color;"}