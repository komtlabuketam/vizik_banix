{"id": 1,"style": "Spectrum","contentVariable": "","contentFunction": "mediump float lerp(mediump float a,mediump float b, mediump float t){\n    return a + t*(b-a);\n}\n\nmediump vec4 lerp(mediump vec4 a, mediump vec4 b, mediump float t){\n    return a + t*(b-a);\n}\n\nmediump float atan2(mediump float y, mediump float x){\n    mediump float t0, t1, t2, t3, t4;\n    t3 = abs(x);\n    t1 = abs(y);\n    t0 = max(t3, t1);\n    t1 = min(t3, t1);\n    t3 = float(1) / t0;\n    t3 = t1 * t3;\n\n    t4 = t3 * t3;\n    t0 =         - float(0.013480470);\n    t0 = t0 * t4 + float(0.057477314);\n    t0 = t0 * t4 - float(0.121239071);\n    t0 = t0 * t4 + float(0.195635925);\n    t0 = t0 * t4 - float(0.332994597);\n    t0 = t0 * t4 + float(0.999995630);\n    t3 = t0 * t3;\n    t3 = (abs(y) > abs(x)) ? float(1.570796327) - t3 : t3;\n    t3 = (x < 0.0) ?  float(3.141592654) - t3 : t3;\n    t3 = (y < 0.0) ? -t3 : t3;\n    return t3;\n}","contentVisualizer": "#define bars 40.0\n    #define barSize 1.0 / bars\n    #define barGap 0.1 * barSize\n    #define sampleSize 2.0\n    #define PI_VISUALIZER 3.14159265359\n    #define circleRadius 0.4;\n\n    #define barColor vec4(.71, .32, .36, 1.0)// red\n    #define centerColor vec4(.91, .64, .0, 1.0)// yello\n    #define backgroundColor vec4(0.0)\n\n    #define colorOnCenter centerColor\n    #define colorOff backgroundColor\n    #define colorOn barColor\n\n    uv = gl_FragCoord.xy / vec2(iResolution.y, iResolution.y);\n\n    mediump vec2 center = vec2((0.5*(iResolution.x/iResolution.y)), 0.5);\n    mediump float deltaYFromCenter = center.y - uv.y;\n    mediump float deltaXFromCenter = center.x - uv.x;\n\n    // create music map red (angle center)\n    mediump vec4 musicMap;\n    mediump float angleFromCenter = atan2(deltaYFromCenter, deltaXFromCenter);\n    musicMap.r = (angleFromCenter+PI_VISUALIZER)/(PI_VISUALIZER*2.0);\n\n    // create music map blue (dist center)\n    mediump float distFromCenter = sqrt((deltaYFromCenter*deltaYFromCenter)+(deltaXFromCenter*deltaXFromCenter));\n    mediump float circleFromCenter = (distFromCenter*3.0);\n    circleFromCenter = circleFromCenter-circleRadius;\n    musicMap.b = circleFromCenter;\n\n    mediump vec4 result = vec4(0.0);\n    if (musicMap.b < 0.0){\n        result = colorOnCenter;\n    } else {\n        mediump float musicChannelnput = texture2D(iChannel0, vec2(musicMap.r, 0.0)).r;\n        mediump float barStart = floor(musicMap.r * bars) / bars;\n        mediump float intensity = 0.0;\n        for (mediump float s = 0.0; s < barSize; s += barSize * sampleSize) {\n            intensity += texture2D(iChannel0, vec2(barStart + s, 0.0)).r;\n        }\n        intensity *= sampleSize;\n        if (musicMap.r - barStart < barGap || musicMap.r > barStart + barSize - barGap) {\n            intensity = 0.0;\n        }\n        mediump float onOff = musicMap.b-intensity;\n        onOff = clamp(onOff, -0.5, 0.5);\n        onOff = floor(onOff+1.0);\n        result = lerp(colorOn, colorOff, onOff);\n    }\n    visualizer = vec3(result.x, result.y, result.z);"}