{"id": 14,"style": "Spectrum","contentVariable": "#define CIRCULAR\n#define BARS 32.\n#define cover_no_matter_where_you_are","contentFunction": "mediump float sgn(mediump float n) {\n    return n > 0. ? 1. :\n    n < 0. ? -1. : 0.;\n}","contentVisualizer": "uv = gl_FragCoord.xy/iResolution.xy;\n    mediump vec3 pcol1 = vec3(0.), pcol2 = vec3(0.);\n    mediump float totalTime = 0.;\n    #ifdef cover_no_matter_where_you_are\n    totalTime = 180.;\n    #endif\n    mediump float PI = 3.14159265;\n    mediump float cTime = mod(iTime, totalTime);\n    pcol1 = vec3(1.)-vec3(1., 1., 0.);\n    pcol2 = vec3(1.)-vec3(1., 0.2, 1.);\n\n    #ifdef CIRCULAR\n    uv = -1.0+2.0*uv;\n    mediump float sizer = texture2D(iChannel0, vec2(0., 0.)).r/2. + .7;\n    uv /= sizer;\n    uv.x *= iResolution.x/iResolution.y;\n\n    uv.xy *= mat2(cos(iTime*PI/180.), sin(iTime*PI/180.), -sin(iTime*PI/180.), cos(iTime*PI/180.));\n\n    mediump float uvx = uv.x;\n    mediump float uvy = uv.y;\n    mediump vec2 uvv = uv;\n\n    mediump float x1 = atan(abs(uvv.y), abs(uvv.x));\n    //x1 += iTime;\n    if (uvx < 0. && uvy < 0.) {\n        x1 += PI;\n    } else if (uvx < 0.) {\n        x1 = PI - x1;\n    } else if (uvy < 0.) {\n        x1 = 2.*PI - x1;\n    }\n    uv.x = x1*180./PI/360.;\n    uv.x *= 5.;\n    uv.x = mod(uv.x, 1.);\n    mediump float y1 = distance(vec2(0., 0.), uvv) - 0.2;\n    uv.y = y1;\n\n    #endif\n\n    mediump float ufx = floor(uv.x*BARS)/BARS;\n\n    // Time varying pixel color\n    mediump float level = texture2D(iChannel0, vec2(ufx, 0.)).r;\n    mediump vec3 col = smoothstep(pcol1, pcol2, vec3(level));\n\n    for (mediump float i = 0.; i < 20.; i++) {\n        if (uv.y > level*(1.)/2.) {\n            col /= i/2.+1.;\n        }\n    }\n    if (uv.y > 0.){\n        gl_FragColor = vec4(col, 1.0);\n    }\n    visualizer = gl_FragColor.rgb;"}