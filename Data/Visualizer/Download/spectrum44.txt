{"id": 44, "style": "Spectrum", "contentVariable": "#define FREQ_STEP 0.001953125\n#define TWO_PI 6.283185", "contentFunction": "highp float getAvgVolume(highp float v, highp int steps){\n    highp float sum = 0.0;\n    highp float x = 0.0;\n    for (highp int i = 0; i < steps; i++){\n        x = fract(v + float(i) * FREQ_STEP);\n        sum += texture2D(iChannel0, vec2(pow(x, 2.1), 0.0)).r * pow(x, 0.08);\n    }\n    return sum /= float(steps);\n}", "contentVisualizer": "highp vec2 res = iResolution.xy;\n    uv = (2.0 * gl_FragCoord.xy - res) * 0.6 / min(res.x, res.y);\n    uv.x = abs(uv.x);\n    uv.y *= -1.0;\n    highp float ps = 1.0 / min(res.x, res.y);\n    highp float avgVolume = getAvgVolume(0.3, 1);\n    //Volume pulse\n    uv *= 1.0 - smoothstep(0.3, 1.1, avgVolume) * 0.7;\n    //Polar coordinates, x - length, y - frequency\n    highp vec2 polarUV = vec2(length(uv), atan(uv.y, uv.x) / TWO_PI);\n    polarUV.y = fract((polarUV.y + 0.2) * 0.8);\n    highp float volume = getAvgVolume(polarUV.y, 20);\n    volume = pow(smoothstep(0.0, 0.9, volume), 4.0 / (avgVolume)) * 0.4; //Adjusting freq volume\n    highp float distToFreq = (volume - polarUV.x + 0.2);\n    highp float distToFreq2 = (volume - polarUV.x + 0.15);\n    //line\n//    visualizer += vec3(0.0, 0.0, 0.0)* smoothstep(1.0 - ps * 1.5, 1.0, 1.0 - abs(distToFreq))* smoothstep(-1.0, 1.0, avgVolume);\n//    visualizer += vec3(0.0, 0.90, 0.2)* smoothstep(1.0 - ps * 2.5, 1.0, 1.0 - abs(distToFreq2))* smoothstep(-1.0, 1.0, avgVolume);\n    //a la blured line\n    visualizer += vec3(1.0, 0.671, 0.176)* smoothstep(1.0 - 0.008 * pow(avgVolume * 3.0 + 1.0, 2.0), 1.0, 1.0 - abs(distToFreq));\n//    visualizer += vec3(0.102, 1.0, 0.059)* smoothstep(1.0 - 0.022 * pow(avgVolume * 3.0 + 1.0, 2.0), 1.0, 1.0 - abs(distToFreq2));\n    //flash\n    visualizer += vec3(1.0, 1.0, 1.0)* pow(avgVolume, 8.0)* (1.0 - polarUV.x);\n    //Center fill\n    visualizer += vec3(1.0, 1.0, 1.0)* smoothstep(0.0, 0.01, distToFreq);\n    //    visualizer += vec3(0.15, 0.15, 0.11)* smoothstep(0.0, 0.16, distToFreq);\n    //Center circles\n    visualizer += vec3(1.0, 1.0, 1.0)* smoothstep(0.1, 0.3, distToFreq)* smoothstep(0.1, 0.8, pow(avgVolume, 2.0));"}