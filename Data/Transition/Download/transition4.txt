{"id":4,"contentVariable":"const mediump float strength = 0.3;","contentFunction":"mediump float Linear_ease(in mediump float begin, in mediump float change, in mediump float duration, in mediump float time) {\n return change * time / duration + begin;\n }\n\n mediump float Exponential_easeInOut(in mediump float begin, in mediump float change, in mediump float duration, in mediump float time) {\n if (time == 0.0)\n return begin;\nelse if (time == duration)\n return begin + change;\n time = time / (duration / 2.0);\n if (time < 1.0)\n return change / 2.0 * pow(2.0, 10.0 * (time - 1.0)) + begin;\n return change / 2.0 * (-pow(2.0, -10.0 * (time - 1.0)) + 2.0) + begin;\n }\n\n mediump float Sinusoidal_easeInOut(in mediump float begin, in mediump float change, in mediump float duration, in mediump float time) {\n return -change / 2.0 * (cos(PI * time / duration) - 1.0) + begin;\n }\n\n mediump float random(in mediump vec3 scale, in mediump float seed) {\n return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n }\n\n mediump vec3 crossFade(in mediump vec2 uv, in mediump float dissolve) {\n return mix(texture2D(iChannel1, uv).rgb, texture2D(iChannel3, uv).rgb, dissolve);\n}","contentTransition":"    mediump float progress = translatePercent;\n mediump vec2 center = vec2(Linear_ease(0.5, 0.0, 1.0, progress), 0.5);\n mediump float dissolve = Exponential_easeInOut(0.0, 1.0, 1.0, progress);\n mediump float strength = Sinusoidal_easeInOut(0.0, strength, 0.5, progress);\n mediump vec3 colorBg = vec3(0.0);\n mediump float total = 0.0;\n mediump vec2 toCenter = center - uv;\n mediump float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0)*0.5;\n for (mediump float t = 0.0; t <= 20.0; t++) {\n mediump float percent = (t + offset) / 20.0;\n mediump float weight = 1.0 * (percent - percent * percent);\n colorBg += crossFade(uv + toCenter * percent * strength, dissolve) * weight;\n total += weight;\n }\n background = colorBg/total;\n"}