{"id": 7, "contentVariable": "", "contentFunction": "mediump vec2 mod2(mediump vec2 p, mediump float d) {\n    mediump float a = mod(p.x,d);\n    mediump float b = mod(p.y,d);\n    return vec2(a,b);\n}\n\nmediump vec3 laserTex(mediump vec2 uv, mediump vec2 mouse) {\n    mediump vec3 col=vec3(0);\n    mediump float thk=0.03;\n    mediump vec3 barCol=vec3(0,1.0,1.0);\n    mediump float edgeCloseFactor = smoothstep(mouse.x-thk,mouse.x,uv.x);\n    mediump float barFactor = edgeCloseFactor* smoothstep(mouse.x+thk,mouse.x, uv.x);\n    col=vec3(barFactor);\n    return col;\n}\n\n\nmediump vec3 laserComposition(mediump vec2 uv, mediump vec2 mouse) {\n    mediump vec3 laserMask = laserTex(uv,mouse);\n    mediump vec3 laserCol = vec3(1.0, 0.5, 0.);\n    return laserMask.x * laserCol *2.;\n}\n\nmediump vec2 burnHash( in mediump vec2 x ){\n    const mediump vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nmediump vec3 noised( in mediump vec2 p ){\n    mediump vec2 i = floor( p );\n    mediump vec2 f = fract( p );\n\n    #if 1\n    // quintic interpolation\n    mediump vec2 u = f*f*f*(f*(f*6.0-15.0)+10.0);\n    mediump vec2 du = 30.0*f*f*(f*(f-2.0)+1.0);\n    #else\n    // cubic interpolation\n    mediump vec2 u = f*f*(3.0-2.0*f);\n    mediump vec2 du = 6.0*f*(1.0-f);\n    #endif\n\n    mediump vec2 ga = burnHash( i + vec2(0.0,0.0) );\n    mediump vec2 gb = burnHash( i + vec2(1.0,0.0) );\n    mediump vec2 gc = burnHash( i + vec2(0.0,1.0) );\n    mediump vec2 gd = burnHash( i + vec2(1.0,1.0) );\n\n    mediump float va = dot( ga, f - vec2(0.0,0.0) );\n    mediump float vb = dot( gb, f - vec2(1.0,0.0) );\n    mediump float vc = dot( gc, f - vec2(0.0,1.0) );\n    mediump float vd = dot( gd, f - vec2(1.0,1.0) );\n\n    return vec3( va + u.x*(vb-va) + u.y*(vc-va) + u.x*u.y*(va-vb-vc+vd),   // value\n    ga + u.x*(gb-ga) + u.y*(gc-ga) + u.x*u.y*(ga-gb-gc+gd) +  // derivatives\n    du * (u.yx*(va-vb-vc+vd) + vec2(vb,vc) - va));\n}\n\nvoid Unity_GradientNoise_float(mediump vec2 UV, mediump float Scale, out mediump float Out){\n    Out = noised(UV * Scale).x *0.5 + 0.5;\n}\n\nvoid Unity_Multiply_float2_float2(mediump vec2 A, mediump vec2 B, out mediump vec2 Out){\n    Out = A * B;\n}\n\nvoid Unity_TilingAndOffset_float(mediump vec2 UV, mediump vec2 Tiling, mediump vec2 Offset, out mediump vec2 Out){\n    Out = UV * Tiling + Offset;\n}\n\nvoid Unity_Lerp_float4(mediump vec4 A, mediump vec4 B, mediump vec4 T, out mediump vec4 Out){\n    Out = mix(A, B, T);\n}", "contentTransition": "mediump vec2 mouse = vec2(translatePercent);\n        mediump float asp = iResolution.y / iResolution.x;\n        mouse.x/=asp;\n        mediump vec2 timeF = vec2(0.1, 0);\n        mediump vec2 timeOffset = iTime * timeF;\n        mediump vec2 uvTiled;\n        Unity_TilingAndOffset_float(uv, vec2 (1, 1), timeOffset, uvTiled);\n        mediump float gradientNoise;\n        Unity_GradientNoise_float(uvTiled, 11., gradientNoise);\n        mediump float distortionAmount=0.1;\n        mediump vec4 lerpedValue;\n        Unity_Lerp_float4(vec4(uv,0.,0.), vec4(gradientNoise),vec4(distortionAmount), lerpedValue);\n        mediump vec3 laserCol = laserComposition(lerpedValue.xy,mouse);\n        mediump vec3 col1=texture2D(iChannel3, uv).xyz;\n        mediump vec3 col2=texture2D(iChannel1, uv).xyz;\n        mediump vec3 col;\n        col=mix(col1,col2,step(mouse.x, lerpedValue.x));\n        col+=laserCol;\n        background = col;"}