{"id": 17, "contentVariable": "", "contentFunction": "mediump vec2 mirror(mediump vec2 v) {\n    mediump vec2 m = mod(v, 2.0);\n    return mix(m, 2.0 - m, step(1.0, m));\n}\n\nmediump float tri(mediump float p) {\n    return mix(p, 1.0 - p, step(0.5, p))*2.0;\n}", "contentTransition": "mediump vec2 vuv1 = uv;\n        mediump float p = pow(min(cos(3.1415926 * (mod(translatePercent,2.)-1.) / 2.), 1. - abs(mod(translatePercent,2.) - 1.)  ), 1. );\n\n        mediump float delayValue = p*7. - uv.y*2. + uv.x - 2.0 ;\n        delayValue = clamp(delayValue,0.,1.);\n\n        mediump vec2 acc = vec2(0.5,2.);\n\n        mediump vec2 translateValue = p + delayValue * acc;\n        mediump vec2 translateValue1 = vec2(-0.5,1.)* translateValue;\n        mediump vec2 translateValue2 = vec2(-0.5,1.) * (translateValue - 1.0 - acc);\n\n        mediump vec2 w = sin( sin(translatePercent)*vec2(0,0.3) + uv*vec2(0,4.)) * vec2(0, 0.5);\n        mediump vec2 xy = w*(tri(p)*0.5 + tri(delayValue)*0.5);\n\n        mediump vec2 uv1 = vuv1 + translateValue1 + xy;\n        mediump vec2 uv2 = vuv1 + translateValue2 + xy;\n        mediump vec4 t0 = texture2D(iChannel1,mirror(uv1));\n        mediump vec4 t1 = texture2D(iChannel3,mirror(uv2));\n        background = mix(t0, t1, delayValue).rgb;"}