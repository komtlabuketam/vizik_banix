{
  "audioUrl": "Music/Audio/R&B/madirfan-unreleased-demo-12-03-2022-bollywood-chill-beat-type-95362.mp3",
  "audioFileName": "madirfan-unreleased-demo-12-03-2022-bollywood-chill-beat-type-95362.mp3",
  "thumbUrl": "",
  "thumbFileName": "",
  "visualizerSource": {
    "contentVariable": "#define VISUAL_TWO_PI 6.28319\n#define VISUAL_SIDES 3",
    "contentFunction": "highp float smoothStripe(highp float v, highp float stripeWidth, highp float smoothingWidth, highp float offset) {\n    return smoothstep(-smoothingWidth,smoothingWidth,abs(1. - 2. * fract(v / stripeWidth)) - 0.5 + offset);\n}\n\nhighp vec2 r(highp vec2 p, highp float a) {\n    highp float c = cos(a);\n    highp float s = sin(a);\n    return vec2(c * p.x - s * p.y, s * p.x + c * p.y);\n}\n\nhighp float polygonDistance(highp vec2 p, highp float r, highp int sides) {\n    highp float apothem = r * cos(PI / float(sides));\n    highp float a = atan(p.x, p.y);\n    highp float b = VISUAL_TWO_PI / float(sides);\n    return cos(floor(0.5 + a / b) * b - a) * length(p) - apothem;\n}\n\nhighp vec2 opRepeatRadial(highp vec2 p, highp int sectorCount) {\n    highp float fSectors = float(sectorCount);\n    highp float segmentAngle = (floor((atan(p.x, p.y) / VISUAL_TWO_PI - 0.5) * fSectors) + 0.5) * VISUAL_TWO_PI / fSectors;\n    return -r(p, segmentAngle);\n}\n\nhighp float layerValue(highp vec2 uv, highp float time) {\n    highp float sw = 0.1; // smoothing width multiplier\n    highp float mainDistance = polygonDistance(uv, 0.5, VISUAL_SIDES);\n    highp float mainStripes = smoothStripe(mainDistance + time * 0.08, 0.1, sw * 3., 0.);\n    highp float baseCrop = smoothstep(0., -sw * 0.2, mainDistance);\n    highp float v = baseCrop * max(mainStripes, smoothstep(-sw, 0., mainDistance + 0.05) /* border */);\n    highp vec2 subspace = opRepeatRadial(vec2(uv.x, -uv.y), VISUAL_SIDES);\n    highp float v2 = smoothstep(sw * 0.1, 0., polygonDistance(subspace - vec2(0., 0.2 + sin(time) * 0.3), 0.2, VISUAL_SIDES));\n    v *= v2;\n    v = mix(baseCrop * smoothStripe(mainDistance - time * 0.16, 0.2, sw, -0.3), v, v2);\n    return v;\n}",
    "contentVisualizer": "uv = 2. * (gl_FragCoord.xy / iResolution.xy - vec2(0.5));\n    uv.y *= iResolution.y / iResolution.x;\n    highp vec3 c1, c2, c3;\n    c1 = vec3(0.95, 0.6, 0.05);\n    c2 = vec3(0.03, 0.47, 0.93);\n    c3 = vec3(0.4, 0.15, 0.95);\n    highp vec3 v1 = layerValue(uv, iTime) * c1;\n    highp vec3 v2 = layerValue(uv, iTime * -0.9 + 0.8) * c2;\n    highp vec3 v3 = layerValue(uv, iTime * 1.1 + 0.3) * c3;\n    visualizer = v1 + v2 + v3;\n    visualizer *= 1.5;"
  },
  "particleSource": {
    "contentVariable": "",
    "contentFunction": "",
    "contentParticle": ""
  },
  "transitionSource": {
    "contentVariable": "",
    "contentFunction": "",
    "contentTransition": ""
  },
  "backgroundEffectId": 1,
  "thumbEffectId": 0
}