{
  "audioUrl": "Music/Audio/Mood/forest-lullaby-110624.mp3",
  "audioFileName": "forest-lullaby-110624.mp3",
  "thumbUrl": "",
  "thumbFileName": "",
  "visualizerSource": {
    "contentVariable": "",
    "contentFunction": "void pR(inout mediump vec2 p, mediump float a) {\n    p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nmediump float pModPolar(inout mediump vec2 p, mediump float repetitions) {\n    mediump float angle = 2.*3.14159265359/repetitions;\n    mediump float a = atan(p.y, p.x) + angle/2.;\n    mediump float r = length(p);\n    mediump float c = floor(a/angle);\n    a = mod(a, angle) - angle/2.;\n    p = vec2(cos(a), sin(a))*r;\n    if (abs(c) >= (repetitions/2.)) c = abs(c);\n    return c;\n}\n\nmediump vec3 scopeGen(mediump vec2 p, mediump float width, mediump float height) {\n    mediump float xPos = (p.x + width / 2.) / width;\n    mediump float nearestXPos = clamp(xPos, 0., 1.);\n    mediump float block = nearestXPos;\n    mediump float leftSampleVol = texture2D(iChannel0, vec2(block - 1. / width, 0)).r;\n    mediump float sampleVol = texture2D(iChannel0, vec2(block, 0)).r;\n    mediump float rightSampleVol = texture2D(iChannel0, vec2(block + 1. / width, 0)).r;\n    sampleVol = (sampleVol + leftSampleVol + rightSampleVol) / 3.;\n    mediump float sampleAmp = pow(sampleVol, 2.);\n    mediump float barHeight = sampleAmp * height;\n    mediump float fadeOpacity = 1. - step(0.5, abs(xPos - 0.5));\n    mediump vec3 minColor = vec3(0., 0., 1.);\n    mediump vec3 maxColor = mix(vec3(1., 0., 0.), vec3(1., 1., 0.), clamp(xPos, 0., 1.));\n    mediump vec3 realMin = mix(maxColor, minColor, pow(texture2D(iChannel0, vec2(sqrt(1. - block), 0)).r, 2.));\n    mediump vec3 realMax = mix(minColor, maxColor, pow(texture2D(iChannel0, vec2(sqrt(1. - block), 0)).r, 0.5));\n    mediump float barMult = 1. - step(barHeight, abs(p.y));\n    mediump float barSmooth = 0.;\n    mediump float barOpacity = (1. - barSmooth) * fadeOpacity * barMult;\n    mediump vec3 barColor = mix(realMin, realMax, clamp(pow(sampleVol, 2.), 0., 1.));\n    return barColor * barOpacity;\n}",
    "contentVisualizer": "uv = gl_FragCoord.xy - iResolution.xy / 2.;\n    mediump float multiplier = iResolution.x / 1000.;\n    mediump float circleMaxSize = 100. * multiplier;\n    mediump float circleAmt = pow(texture2D(iChannel0, vec2(0, 0)).r, 2.);\n    mediump float circlePos = circleAmt * circleMaxSize;\n    mediump float circleDist = clamp(1. - abs(length(uv) - circlePos) / (800. * multiplier), 0., 1.);\n    mediump vec3 circleColor = mix(vec3(0.1, 0.1, 1.), vec3(1., 0.1, 1.), pow(circleAmt, 2.)) * pow(circleDist, 99.);\n    mediump vec2 originalCP = uv;\n    pR(uv, radians(iTime) * 30.);\n    mediump float brightness = pow(texture2D(iChannel0, vec2(1., 0)).r, 2.);\n    mediump float currentOffset = (200. + 150. * (brightness - 0.5)) * multiplier;\n    uv /= 0.8;\n    pModPolar(uv, 6.);\n    uv.x -= currentOffset;\n    pR(uv, radians(90.));\n    uv.x += currentOffset;\n    mediump vec3 finalColor = clamp(scopeGen(uv - vec2(150. * multiplier, 0.), 300. * multiplier, 300. * multiplier) / 2. + circleColor, 0., 1.);\n    mediump vec2 samplePos = iResolution.xy / 2. + originalCP * 0.995;\n    visualizer = finalColor * 1.0;\n    visualizer = pow(visualizer, vec3(1.0, 1.1, 1.2));\n    visualizer = pow(visualizer, vec3(1. / 2.2));"
  },
  "particleSource": {
    "contentVariable": "",
    "contentFunction": "mediump float vDrop(mediump vec2 uv,mediump float t){\n    uv.x = uv.x*300.0;\t\t\t\t\t\t\n    mediump float dx = fract(uv.x);\n    uv.x = floor(uv.x);\n    uv.y *= 0.05;\t\t\t\t\t\t\t\n    mediump float o=sin(uv.x);\t\t\t\t\n    mediump float s=cos(uv.x*33.1)*.3 +.7;\t\t\t\n    mediump float trail = mix(255.0,255.0,s);\t\t\t\n    mediump float yv = fract(uv.y + t*s + o) * trail;\n    yv = 1.0/yv;\n    yv = smoothstep(0.0,1.0,yv*yv);\n    yv = sin(yv*PI)*(s*5.0);\n    mediump float d2 = sin(dx*PI);\n    return yv*(d2*d2);\n}",
    "contentParticle": "uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    mediump float d = length(uv)+0.05;\n    uv = vec2(atan(uv.x, uv.y) / PI, 2.5 / d);\n    uv.y *= 0.5;\n    mediump float t =  iTime * 0.05;\n    particle = vec3(0.99,0.99,0.99) * vDrop(uv,t);\n    particle = particle *(d*d);"
  },
  "transitionSource": {
    "contentVariable": "",
    "contentFunction": "",
    "contentTransition": "mediump vec2 size = vec2(0.0,28.0);\n        mediump float wiggleSP = 2.0;\n        size.x += clamp(sin(4.* translatePercent),0.0,1.0)*.1;\n        uv.x += (sin(uv.y*size.y+(4.* translatePercent*wiggleSP))*size.x);\n        mediump vec4 img0 = texture2D(iChannel1,uv);\n        mediump vec4 img1 = texture2D(iChannel3,uv);\n        mediump float blend = clamp(sin(4.* translatePercent*.5+5.583)+0.5,0.0,1.0);\n        background = mix(img0,img1,blend).rgb;"
  },
  "backgroundEffectId": 1,
  "thumbEffectId":0
}