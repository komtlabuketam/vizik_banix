{"id": 4, "style": "Matrix", "contentVariable": "#define NUM_LAYERS 3.", "contentFunction": "mediump float N21(mediump vec2 p) {\n    mediump vec3 a = fract(vec3(p.xyx) * vec3(213.897, 653.453, 253.098));\n    a += dot(a, a.yzx + 79.76);\n    return fract((a.x + a.y) * a.z);\n}\n\nmediump vec2 GetPos(mediump vec2 id, mediump vec2 offs, mediump float t) {\n    mediump float n = N21(id+offs);\n    mediump float n1 = fract(n*10.);\n    mediump float n2 = fract(n*100.);\n    mediump float a = t+n;\n    return offs + vec2(sin(a*n1), cos(a*n2))*.4;\n}\n\nmediump float GetT(mediump vec2 ro, mediump vec2 rd, mediump vec2 p) {\n    return dot(p-ro, rd);\n}\n\nmediump float LineDist(mediump vec3 a, mediump vec3 b, mediump vec3 p) {\n    return length(cross(b-a, p-a))/length(p-a);\n}\n\nmediump float df_line( in mediump vec2 a, in mediump vec2 b, in mediump vec2 p){\n    mediump vec2 pa = p - a, ba = b - a;\n    mediump float h = clamp(dot(pa,ba) / dot(ba,ba), 0., 1.);\n    return length(pa - ba * h);\n}\n\nmediump float line(mediump vec2 a, mediump vec2 b, mediump vec2 uv) {\n    mediump float r1 = .04;\n    mediump float r2 = .01;\n\n    mediump float d = df_line(a, b, uv);\n    mediump float d2 = length(a-b);\n    mediump float fade = smoothstep(1.5, .5, d2);\n\n    fade += smoothstep(.05, .02, abs(d2-.75));\n    return smoothstep(r1, r2, d)*fade;\n}\n\nmediump float NetLayer(mediump vec2 st, mediump float n, mediump float t) {\n    mediump vec2 id = floor(st)+n;\n\n    st = fract(st)-.5;\n\n    mediump vec2 p[9];\n    mediump int i=0;\n    for(mediump float y=-1.; y<=1.; y++) {\n        for(mediump float x=-1.; x<=1.; x++) {\n            p[i++] = GetPos(id, vec2(x,y), t);\n        }\n    }\n\n    mediump float m = 0.;\n    mediump float sparkle = 0.;\n\n    for(mediump int i=0; i<9; i++) {\n        m += line(p[4], p[i], st);\n\n        mediump float d = length(st-p[i]);\n\n        mediump float s = (.005/(d*d));\n        s *= smoothstep(1., .7, d);\n        mediump float pulse = sin((fract(p[i].x)+fract(p[i].y)+t)*5.)*.4+.6;\n        pulse = pow(pulse, 20.);\n\n        s *= pulse;\n        sparkle += s;\n    }\n\n    m += line(p[1], p[3], st);\n    m += line(p[1], p[5], st);\n    m += line(p[7], p[5], st);\n    m += line(p[7], p[3], st);\n\n    mediump float sPhase = (sin(t+n)+sin(t*.1))*.25+.5;\n    sPhase += pow(sin(t*.1)*.5+.5, 50.)*5.;\n    m += sparkle*sPhase;//(*.5+.5);\n\n    return m;\n}", "contentParticle": "uv = (gl_FragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    mediump vec2 M = 0./iResolution.xy-.5;\n\n    mediump float t = iTime*.1;\n\n    mediump float s = sin(t);\n    mediump float c = cos(t);\n    mediump mat2 rot = mat2(c, -s, s, c);\n    mediump vec2 st = uv*rot;\n    M *= rot*2.;\n\n    mediump float m = 0.;\n    for(mediump float i=0.; i<1.; i+=1./NUM_LAYERS) {\n        mediump float z = fract(t+i);\n        mediump float size = mix(15., 1., z);\n        mediump float fade = smoothstep(0., .6, z)*smoothstep(1., .8, z);\n\n        m += fade * NetLayer(st*size-M*z, i, iTime);\n    }\n\n    mediump vec3 baseCol = vec3(s, cos(t*.4), -sin(t*.24))*.4+.6;\n    mediump vec3 col = baseCol*m;\n\n    particle = col;"}