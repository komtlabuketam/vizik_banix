{"id": 2, "style": "Snow", "contentVariable": "#define TILES 3.0", "contentFunction": "mediump float random (mediump vec2 uv) {\n    return fract(sin(dot(uv, vec2(135., 263.))) * 103.214532);\n}\n\nmediump vec4 drawSnow(mediump vec2 curid, mediump vec2 uv, mediump vec4 fragColor, mediump float r, mediump float c){\n    mediump float maxoff = 2.0 / TILES;\n    for(mediump int x=-2; x<=1; x++){\n        for(mediump int y=-2; y<=0; y++){\n            mediump float rad = (1.0 / (TILES * 5.0)) * r; //set default radius\n            mediump vec2 id = curid + vec2(x, y); //get the id of the tile we're visiting\n            mediump vec2 pos = id / TILES; //calculate position\n            mediump float xmod = mod(random(pos), maxoff);\n            pos.x += xmod; //add a random x-offset\n            pos.y += mod(random(pos+vec2(4,3)), maxoff); //add a random y-offset\n            rad *= mod(random(pos), 1.0); //vary the radius by multiplying by a random val\n            pos.x += 0.5*(maxoff-xmod)*sin(iTime*r + random(pos)*100.0); //dynamic sin wave x-offset\n\n            mediump float len = length(uv - pos); //calculate distance from tile's particle\n\n            //if we're inside the particle, draw it\n            mediump float v = smoothstep(0.0, 1.0, (rad - len) / rad*0.75);\n            fragColor = mix(fragColor, vec4(c), v);\n        }\n    }\n    return fragColor;\n}", "contentParticle": "mediump vec4 bg = vec4(.529, .808, .922, 1) * 0.25;\n    mediump vec2 uvNorm = gl_FragCoord.xy / iResolution.xy;\n    mediump vec2 uvog = gl_FragCoord.xy / iResolution.y;\n    uv = gl_FragCoord.xy / iResolution.y;\n    uv += 0.2*vec2(-iTime, iTime);\n    mediump vec2 curid = floor(uv * TILES);\n    curid += vec2(0.5);\n    mediump vec4 result = vec4(0.);\n    result = drawSnow(curid, uv, result, 1.0, 0.9);\n    uv = uvog + 0.1*vec2(-iTime - 100.0, iTime + 100.0);\n    curid = floor(uv * TILES);\n    curid += vec2(0.5);\n    result += drawSnow(curid, uv, vec4(0), 0.75, 0.45);\n    uv = uvog + 0.05*vec2(-iTime - 150.0, iTime + 150.0);\n    curid = floor(uv * TILES);\n    curid += vec2(0.5);\n    result += drawSnow(curid, uv, vec4(0), 0.5, 0.225);\n    particle = result.rgb;"}