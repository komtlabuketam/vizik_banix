{"id": 4, "style": "Star Field", "contentVariable": "#define iterations 12\n#define formuparam 0.57\n\n#define volsteps 10\n#define stepsize 0.2\n\n#define zoom   1.200\n#define tile   1.0\n#define speed  0.010\n\n#define brightness 0.0015\n#define darkmatter 1.00\n#define distfading 0.730\n#define saturation 1.0\n\n#define mo (2.0 * 0. - iResolution.xy) / iResolution.y\n#define blackholeCenter vec3(time*2.,time,-2.)\n#define blackholeRadius 1.2\n#define blackholeIntensity 1.0", "contentFunction": "mediump float iSphere(mediump vec3 ray, mediump vec3 dir, mediump vec3 center, mediump float radius)\n{\n    mediump vec3 rc = ray-center;\n    mediump float c = dot(rc, rc) - (radius*radius);\n    mediump float b = dot(dir, rc);\n    mediump float d = b*b - c;\n    mediump float t = -b - sqrt(abs(d));\n    mediump float st = step(0.0, min(t,d));\n    return mix(-1.0, t, st);\n}\n\nmediump vec3 iPlane(mediump vec3 ro, mediump vec3 rd, mediump vec3 po, mediump vec3 pd){\n    mediump float d = dot(po - ro, pd) / dot(rd, pd);\n    return d * rd + ro;\n}\n\nmediump vec3 r(mediump vec3 v, mediump vec2 r)//incomplete but ultrafast rotation fcn thnx to rodolphito\n{\n    mediump vec4 t = sin(vec4(r, r + 1.5707963268));\n    mediump float g = dot(v.yz, t.yw);\n    return vec3(v.x * t.z - g * t.x,\n    v.y * t.w - v.z * t.y,\n    v.x * t.x + g * t.z);\n}", "contentParticle": "uv=gl_FragCoord.xy/iResolution.xy-.5;\n    uv.y*=iResolution.y/iResolution.x;\n    mediump vec3 dir=vec3(uv*zoom,1.);\n    mediump float time=iTime*speed+.25;\n\n    //mouse rotation\n    mediump vec3 from=vec3(0.0, 0.0, -15.0);\n    from = r(from, mo / 10.0);\n    dir = r(dir, mo / 10.0);\n    from+=blackholeCenter;\n\n    mediump vec3 nml = normalize(blackholeCenter - from);\n    mediump vec3 pos = iPlane(from, dir, blackholeCenter, nml);\n    pos = blackholeCenter - pos;\n    mediump float intensity = dot(pos, pos);\n    if(intensity > blackholeRadius * blackholeRadius){\n        intensity = 1.0 / intensity;\n        dir = mix(dir, pos * sqrt(intensity), blackholeIntensity * intensity);\n\n        //volumetric rendering\n        mediump float s=0.1,fade=1.;\n        mediump vec3 v=vec3(0.);\n        for (mediump int r=0; r<volsteps; r++) {\n            mediump vec3 p=from+s*dir*.5;\n            p = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\n            mediump float pa,a=pa=0.;\n            for (int i=0; i<iterations; i++) {\n                p=abs(p)/dot(p,p)-formuparam; // the magic formula\n                a+=abs(length(p)-pa); // absolute sum of average change\n                pa=length(p);\n            }\n            mediump float dm=max(0.,darkmatter-a*a*.001); //dark matter\n            a*=a*a; // add contrast\n            if (r>6) fade*=1.-dm; // dark matter, don't render near\n            //v+=vec3(dm,dm*.5,0.);\n            v+=fade;\n            v+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\n            fade*=distfading; // distance fading\n            s+=stepsize;\n        }\n        v=mix(vec3(length(v)),v,saturation); //color adjust\n        particle = v*.01;\n    }"}