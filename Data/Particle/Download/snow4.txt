{"id": 4, "style": "Snow", "contentVariable": "#define pi_value 3.1415926\nmediump float T = 0.;", "contentFunction": "mediump vec2 hash(mediump vec2 p) {\n    p=vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3))); return fract(sin(p)*18.5453);\n}\n\nmediump float simplegridnoise(mediump vec2 v){\n    mediump float s = 1. / 256.;\n    mediump vec2 fl = floor(v), fr = fract(v);\n    mediump float mindist = 1e9;\n    for (mediump int y = -1; y <= 1; y++)\n    for (mediump int x = -1; x <= 1; x++){\n        mediump vec2 offset = vec2(x, y);\n        mediump vec2 pos = .5 + .5 * cos(2. * pi_value * (T*.1 + hash(fl+offset)) + vec2(0, 1.6));\n        mindist = min(mindist, length(pos+offset -fr));\n    }\n\n    return mindist;\n}\n\nmediump float blobnoise(mediump vec2 v, mediump float s){\n    return pow(.5 + .5 * cos(pi_value * clamp(simplegridnoise(v)*2., 0., 1.)), s);\n}\n\nmediump float fractalblobnoise(mediump vec2 v, mediump float s){\n    mediump float val = 0.;\n    const mediump float n = 4.;\n    for (mediump float i = 0.; i < n; i++)\n    val += pow(0.5, i+1.) * blobnoise(exp2(i) * v + vec2(0, T), s);\n    return val;\n}", "contentParticle": "T = iTime;\n    mediump vec2 r = vec2(1.0, 1.);\n    uv = fragCoord.xy;\n    mediump float val = fractalblobnoise(r * uv * 20.0, 5.0);\n    particle = vec3(val);"}