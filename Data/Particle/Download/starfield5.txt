{"id": 5, "style": "Star Field", "contentVariable": "#define FAR 100.0\n#define GRAN 14.0\n#define GRAN2 (GRAN*0.5)\n#define GLOW 0.286\n#define GLOW_POW 1.3\n#define AADelta 0.0005\n#define CHROMA 0.005\n#define TIME_INTERVAL 0.25", "contentFunction": "mediump float map(mediump vec3 p) {\n    return length(mod(p, GRAN) - GRAN2);\n}\nmediump vec3 doColor(in mediump vec2 t) {\n    return vec3(pow(16.8*t.y, 4.5));\n}\n\nmediump float Beat(mediump float time, mediump float loop, mediump float offset) {\n    return max(0., mod(time / TIME_INTERVAL, loop) - offset);\n}\n\n\nmediump vec2 trace(in mediump vec3 o, in mediump vec3 rd)\n{\n    mediump float t = 0.;\n    mediump float glow = 0.;\n    for (mediump int i = 0; i < 100; i++)\n    {\n        mediump float d = map(o);\n        if (d < 0.0001 || t > FAR)\n        return vec2(t, glow);\n\n        o += rd * d;\n        t += d;\n        glow += GLOW / (pow(d*t, GLOW_POW));\n    }\n\n    return vec2(FAR, glow);\n}", "contentParticle": "uv = (gl_FragCoord.xy - iResolution.xy*.5) / iResolution.y;\n    mediump float Time = iTime * .8;\n    mediump vec3 ro = vec3(Time*10.3 + 10.7 * sin(Time*0.3), 15.7 * sin(Time*.3), -Time*50. + 50.*sin(Time*0.3));\n    mediump vec3 lk = ro + vec3(0.5*sin(Time*0.24), 0.65*sin(Time*0.097), -1.0);\n    lk.y += 0.004 * sin(153.0*iTime) * pow(max(0.0, 1.0 - 4.*Beat(iTime, 4., 2.0)), 1.1);\n    mediump float FOV = 3.14159/8.0;\n    mediump vec3 forward = normalize(lk-ro);\n    mediump vec3 right = normalize(vec3(forward.z, 0.15*sin(Time*0.13), -forward.x));\n    mediump vec3 up = cross(forward, right);\n\n    mediump vec3 rd = normalize(forward + FOV*uv.x*right + FOV*uv.y*up);\n    mediump vec2 t = trace(ro, rd);\n    mediump vec4 result = vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    mediump float Chroma = pow(abs(uv.x)+abs(uv.y), 3.0)*CHROMA;\n    rd = normalize(forward + FOV*(uv.x+Chroma)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    result += 8.0*vec4(1, 0, 0, 1) * vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    rd = normalize(forward + FOV*(uv.x-Chroma)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    result += 8.0*vec4(0, 1, 1, 1) * vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    rd = normalize(forward + FOV*(uv.x+AADelta)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    result += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    rd = normalize(forward + FOV*(uv.x-AADelta)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    result += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    rd = normalize(forward + FOV*uv.x*right + FOV*(uv.y+AADelta)*up);\n    t = trace(ro, rd);\n    result += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    rd = normalize(forward + FOV*uv.x*right + FOV*(uv.y-AADelta)*up);\n    t = trace(ro, rd);\n    result += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    result *= vec4(0.22, 0.22, 0.22, 1.0);\n    particle = result.rgb;"}